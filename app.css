* {
    box-sizing: border-box;
    /* border: red 1px dashed; */
}

:root {
    --piece-size: calc(100vh / 10);
    --number-rows: 7;
    --number-cols: 7;
    --col-margin: calc(var(--piece-size) * .05);
    --navbar-height: 50px;
}

body {
    background-color: rgb(0, 0, 0);
    font-family: 'Gotu', sans-serif;
    font-weight: 700;
}

.navbar {
    background-color: rgb(65, 65, 65);
    color: #32eef2;
    padding: .5em 2em;
    display: flex;
    justify-content: space-between;
    align-items: center;
    /* border-bottom: red 1px solid; */
    height: var(--navbar-height);
}

.navbar > h2 {
    margin: 0;
}

.navbar > button {
    background-color: #32eef2;
    border: none;
    font-weight: 700;
    box-shadow: 2px 2px 2px black;
}

.navbar > button:hover {
    background-color: chartreuse;
}

main {
    height: calc(100vh - var(--navbar-height));
}

.board {
    background-color: rgb(0, 0, 0);
}

.column {
    width: var(--piece-size);
    height: calc(var(--piece-size) * var(--number-rows));
    background-image: linear-gradient(cadetblue, rgba(0,0,0,.6));
    display: inline-block;
    margin: 0 var(--col-margin);
    border: red 1px dashed;
    border-top: red 0px dashed;
    border-bottom: red 1px solid;
    border-radius: 5px;
    position: relative;
}

.piece-wrapper {
    perspective: 400px;
    width: calc(var(--piece-size) - 2px);
    height: var(--piece-size);
    position: absolute;
    transition: all 1.5s;
}

.piece {
    position: absolute;
    width: calc(var(--piece-size) * .9);
    height: calc(var(--piece-size) * .9);
    transition: inherit;
    transform-style: preserve-3d;
    transform-origin: center;
}

.front, 
.back {
    top: 0;
    left: 0;
    width: calc(var(--piece-size) * .9);
    height: calc(var(--piece-size) * .9);
    border-radius: calc(var(--piece-size) / 2);
    position: absolute;
    backface-visibility: hidden;
}

.back {
    transform: rotateY(180deg);
}

.flip-fall {
    transform: rotateY(3turn);
}

.flipped {
    transform: rotateY(.5turn);
}


@media (orientation: portrait) {
    :root {
        --piece-size: calc(100vw / 10);
    }
}
